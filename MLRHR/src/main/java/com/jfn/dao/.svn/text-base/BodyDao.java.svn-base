package com.jfn.dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.ResultSetExtractor;
import org.springframework.jdbc.core.simple.ParameterizedRowMapper;
import org.springframework.stereotype.Repository;

import com.jfn.entity.Body;

/**
 * @create-time 2014-8-8 下午9:07:45
 * @creator     佟德慧
 */
@Repository
public class BodyDao
{
	@Autowired
	private JdbcTemplate jdbcTemplate;

	private final String SQL_INSERT_body = "insert into body(email,address,bodyType,contact,name,pId,telefax,telephone,web) values(?,?,?,?,?,?,?,?,?)";

	private final String SQL_Get_BY_ID = "select * from body where Id=?";
	private final String SQL_GET_body_LIST = "select * from body order by Id  ";
	private final String SQL_SET_body_UPDATE = "update body set address=?,bodyType=?,contact=?,email=?,name=?,pId=?,telefax=?,telephone=?,web=? where id=?";
	
	private final static String SQL_DEL_BY_ID = "delete from body where id = ?";
		
	public boolean insert( Body body )
	{
		return jdbcTemplate.update(
				SQL_INSERT_body,
				new Object[]{ body.getEmail(), body.getAddress(), body.getBodyType(),body.getContact(),body.getName(),body.getpId(),body.getTelefax(),body.getTelephone(),body.getWeb()} ) == 1;
	}
	
	public Body get( int id )
	{
		return jdbcTemplate.query( SQL_Get_BY_ID, new Object[]{ id},
				new ResultSetExtractor<Body>()
				{
					@Override
					public Body extractData( ResultSet rs )
							throws SQLException, DataAccessException
					{
						Body body = new Body(); 
						if( rs.next() )
						{
							body.setId(rs.getInt("id"));
							body.setAddress(rs.getString("address"));
							body.setBodyType(rs.getString("bodytype"));
							body.setContact(rs.getString("contact"));
							body.setEmail(rs.getString("email"));
							body.setName(rs.getString("name"));
							body.setpId(rs.getString("pId"));
							body.setTelefax(rs.getString("telefax"));
							body.setTelephone(rs.getString("telephone"));
							body.setWeb(rs.getString("web"));
							
						}
						return body;
					}
				} );
	}
	
	
	
	/**
	 * 修改保存
	 * @param request
	 * @param model
	 * @return
	 */
	
	public boolean Update(Body body)
	{
		    Object[] params=new Object[]{
		    		body.getAddress(),
		    		body.getBodyType(),
		    		body.getContact(),
		    		body.getEmail(),
		    		body.getName(),
		    		body.getpId(),
		    		body.getTelefax(),
		    		body.getTelephone(),
		    		body.getWeb(),
		    		body.getId()
		    };
			return jdbcTemplate.update( SQL_SET_body_UPDATE, params)==1;
	}		
	
	
	public boolean delete( int id )
	{
		 return jdbcTemplate.update( SQL_DEL_BY_ID, new Object[]{id} )==1;
	}
	
	public boolean isPropertyUnique(String newLoginName,String oldLoginName){
		return false;
	}

	public List<Body> getAll() {
		// TODO Auto-generated method stub
		return jdbcTemplate.query( SQL_GET_body_LIST, new bodyRowMapper());
	}
	
	
	
	/**
	 * 定义内部类实现RowMapper接口
	 */
	public class bodyRowMapper implements ParameterizedRowMapper<Body>
	{
		// 实现mapRow方法
		@Override
		public Body mapRow( ResultSet rs, int num ) throws SQLException
		{
			// 对类进行封装
			Body body = new Body();
			body.setId(rs.getInt("id"));
			body.setAddress(rs.getString("address"));
			body.setBodyType(rs.getString("bodytype"));
			body.setContact(rs.getString("contact"));
			body.setEmail(rs.getString("email"));
			body.setName(rs.getString("name"));
			body.setpId(rs.getString("pId"));
			body.setTelefax(rs.getString("telefax"));
			body.setTelephone(rs.getString("telephone"));
			body.setWeb(rs.getString("web"));
			return body;
		}
	}
	
}
