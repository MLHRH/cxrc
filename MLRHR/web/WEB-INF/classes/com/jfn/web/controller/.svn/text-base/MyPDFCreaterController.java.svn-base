package com.jfn.web.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.JsonObject;
import com.jfn.entity.ZhichengApply;
import com.jfn.service.AccountManager;
import com.jfn.service.MyPDFCreater;
import com.jfn.service.ZhichengApplyService;

/**
 * @create-time 2014-8-31 下午10:18:06
 * @author 佟德慧
 * @remarks 无
 */
@Controller
@RequestMapping("/")
public class MyPDFCreaterController {
	@Autowired
	private AccountManager accountManager;

	@Autowired
	private MyPDFCreater PDFservice;
	@Autowired
	private ZhichengApplyService zhichengapplyservice;

	@RequestMapping(value = "MyPDFTemp", method = RequestMethod.GET)
	@ResponseBody
	public String MyPDFTemp(HttpServletRequest request) {
		JsonObject jsonResponse = new JsonObject();
		int result = 0;// 0:fail;1:success
		String filename = "";
		String user_id = request.getParameter("user_id");
		try {
			if ((user_id == null) || (user_id.length() < 1)) {
				result = 0;
			} else {
				filename = PDFservice.fromPDFTempletToPdfWithValue_temp(user_id);
				result = 1;
			}
		} catch (Exception e) {
			result = 0;
		}
		jsonResponse.addProperty("result", result);
		jsonResponse.addProperty("filename", filename);
		return jsonResponse.toString();
	}

	@RequestMapping(value = "MyPDFCreate", method = RequestMethod.GET)
	@ResponseBody
	public String MyPDFCreate(HttpServletRequest request) {
		JsonObject jsonResponse = new JsonObject();
		int result = 0;// 0:fail;1:success
		String filename = "";
		String zhichengApply_id = request.getParameter("zhichengApply_id");
		try {
			if ((zhichengApply_id == null) || (zhichengApply_id.length() < 1)) {
				result = 0;
			} else {
				filename = PDFservice.fromPDFTempletToPdfWithValue(zhichengApply_id);
				result = 1;
			}
		} catch (Exception e) {
			result = 0;
		}
		jsonResponse.addProperty("result", result);
		jsonResponse.addProperty("filename", filename);
		return jsonResponse.toString();
	}

	@RequestMapping(value = "exportDoc07", method = RequestMethod.POST)
	@ResponseBody
	public String exportDoc07(HttpServletRequest request) {

		String startDate = request.getParameter("startDate");
		String endDate = request.getParameter("endDate");
		String body_id = request.getParameter("body_id");

		String apply_userRank = request.getParameter("apply_userRank");
		String apply_body = request.getParameter("apply_body");
		String apply_userName = request.getParameter("apply_userName");
		String apply_userMobile = request.getParameter("apply_userMobile");
		String apply_date = request.getParameter("apply_date");

		ZhichengApply zhichengapply = new ZhichengApply();
		zhichengapply.setStatus(request.getParameter("status"));
		zhichengapply.setApply_name(request.getParameter("apply_name"));
		zhichengapply.setApply_rank(request.getParameter("apply_rank"));

		JsonObject jsonResponse = new JsonObject();
		int result = 0;// 0:fail;1:success
		String filename = "";
		try {
			if ((body_id == null) || (body_id.length() < 1)) {
				result = 0;
			} else {
				filename = PDFservice.createDoc07_hr(startDate, endDate, body_id, zhichengapply, apply_userRank, apply_body, apply_userName, apply_userMobile, apply_date);
				result = 1;
			}
		} catch (Exception e) {
			result = 0;
		}
		jsonResponse.addProperty("result", result);
		jsonResponse.addProperty("filename", filename);
		return jsonResponse.toString();
	}

	//
	@RequestMapping(value = "downLoadFile", method = RequestMethod.GET)
	@ResponseBody
	public String downLoadFile(HttpServletRequest request) {
		JsonObject jsonResponse = new JsonObject();
		int result = 0;// 0:fail;1:success
		String filename = "";
		String uploader_id = request.getParameter("uploader_id");
		String file_type = request.getParameter("file_type");
		try {
			if (uploader_id == null) {
				result = 0;
			} else {
				filename = PDFservice.downLoadFile(Integer.valueOf(uploader_id), Integer.valueOf(file_type));
				result = 1;
			}
		} catch (Exception e) {
			result = 0;
		}
		jsonResponse.addProperty("result", result);
		jsonResponse.addProperty("filename", filename);
		return jsonResponse.toString();
	}

}
